"use strict";(self.webpackChunktotem=self.webpackChunktotem||[]).push([[3285],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(n),k=a,g=m["".concat(u,".").concat(k)]||m[k]||s[k]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=k;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const o={title:"Rust \u53c3\u8003\u8207\u501f\u7528",description:"References and Borrowing",keywords:["Rust","References Borrowing"]},l="Rust \u53c3\u8003\u8207\u501f\u7528",p={unversionedId:"Rust\u8d77\u6b65\u8d70/Rust_References_Borrowing",id:"Rust\u8d77\u6b65\u8d70/Rust_References_Borrowing",title:"Rust \u53c3\u8003\u8207\u501f\u7528",description:"References and Borrowing",source:"@site/docs/003_Rust\u8d77\u6b65\u8d70/008_Rust_References_Borrowing.md",sourceDirName:"003_Rust\u8d77\u6b65\u8d70",slug:"/Rust\u8d77\u6b65\u8d70/Rust_References_Borrowing",permalink:"/en/docs/Rust\u8d77\u6b65\u8d70/Rust_References_Borrowing",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Rust \u53c3\u8003\u8207\u501f\u7528",description:"References and Borrowing",keywords:["Rust","References Borrowing"]},sidebar:"totem_sidebar",previous:{title:"Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236",permalink:"/en/docs/Rust\u8d77\u6b65\u8d70/Rust_Loop_Condition"},next:{title:"Rust Struct \u7d50\u69cb\u9ad4",permalink:"/en/docs/Rust\u8d77\u6b65\u8d70/Rust_Struct"}},u={},i=[{value:"\u51fd\u6578\u501f\u7528\u8b8a\u6578\u53c3\u8003",id:"\u51fd\u6578\u501f\u7528\u8b8a\u6578\u53c3\u8003",level:2},{value:"\u51fd\u6578\u501f\u7528\u53ef\u8b8a\u8b8a\u6578\u53c3\u8003",id:"\u51fd\u6578\u501f\u7528\u53ef\u8b8a\u8b8a\u6578\u53c3\u8003",level:2},{value:"\u8ff7\u9014\u53c3\u8003 Dangling Pointer",id:"\u8ff7\u9014\u53c3\u8003-dangling-pointer",level:2},{value:'Slice Type<span id="Rust_Slice">\xa0</span>',id:"slice-type",level:2}],c={toc:i},m="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rust-\u53c3\u8003\u8207\u501f\u7528"},"Rust \u53c3\u8003\u8207\u501f\u7528"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u9019\u908a\u8a0e\u8ad6\u7684\u4e3b\u8981\u662f\u7269\u4ef6\u985e\u7684\u985e\u5225\u6240\u7522\u751f\u7684 instance \u6240\u5c6c\u8b8a\u6578\u8207\u6307\u6a19\u9593\u7684\u95dc\u4fc2\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u539f\u751f\u985e ","(","Primitive Types",")"," \u56e0\u70ba\u8a18\u61b6\u9ad4\u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c ","(","heap",")","\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u800c Instance \u8a18\u61b6\u9ad4\u4e3b\u8981\u662f\u5728 Stack \u8655\u7406\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u8b8a\u6578\u8207 Stack ","(","\u5806\u758a",")"," \u9593\u9084\u6709 reference ","(","\u53c3\u8003",")"," \u8207 Pointer ","(","\u6307\u6a19",")"," \u7b49\u4e2d\u9593\u904e\u7a0b\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","Rust \u5728\u8b8a\u6578\u518d\u6b21\u6307\u6d3e\u3001\u5f15\u6578\u50b3\u905e\u3001\u4ee5\u53ca\u8a18\u61b6\u9ad4\u6b78\u9084\u65b9\u9762\u8207\u5148\u524d\u5b78\u904e\u7684\u7a0b\u5f0f\u8a9e\u8a00\u6709\u4e9b\u8a31\u5dee\u7570\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u6240\u4ee5\uff0c\u984d\u5916\u63d0\u51fa\u4f86\u8a0e\u8ad6\u8207\u7d00\u9304\u3002")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e3b\u9ad4\u76f8\u95dc\u95dc\u9375\u5b57",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u53c3\u8003 reference  "),(0,a.kt)("li",{parentName:"ul"},"\u501f\u7528 borrowing: \u4e0d\u7372\u53d6\u6240\u6709\u6b0a\u4f86\u4f7f\u7528\u53c3\u8003  "),(0,a.kt)("li",{parentName:"ul"},"\u4f5c\u7528\u57df scope  "),(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u6b0a ownership  "),(0,a.kt)("li",{parentName:"ul"},"&, *")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u91cd\u9ede\u89c0\u5ff5\u6458\u8981:  "),(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"Instance \u7684 Variable \u82e5\u7576 argument pass \u7d66\u51fd\u6578\u5f8c\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u9810\u8a2d\u6240\u6709\u6b0a\u6703\u4e00\u4f75\u50b3\u7d66 Function\uff0c\u56e0\u800c\u9020\u6210\u539f\u5148\u8b8a\u6578\u5931\u6548\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u82e5 Variable \u60f3\u4fdd\u7559\u6240\u6709\u6b0a\uff0c\u5247\u53ef\u4ee5\u501f\u51fa reference \u7d66 Function\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u5c0d Function \u4f86\u8aaa\u4fbf\u662f\u53c3\u8003\u501f\u7528 (References Borrowing)\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u7576 Function \u501f\u4f86\u7684\u53c3\u8003\u96e2\u958b\u4f5c\u7528\u57df\u5f8c\uff0c\u56e0\u70ba Function \u6c92\u6709\u6240\u6709\u6b0a\uff0c\u6240\u4ee5\u8a18\u61b6\u9ad4\u4e0d\u6703\u88ab\u91cb\u653e\u6389\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u6b64\u6642 argument \u8981\u52a0\u4e0a & \u4fee\u98fe\uff0c\u7528\u4f86\u8868\u9054\u50c5\u662f\u501f\u7528\u3002  ")),(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"Compiler \u6703\u78ba\u4fdd\u53c3\u8003\u6c38\u9060\u6709\u6548",(0,a.kt)("br",{parentName:"p"}),"\n","\u540c\u6642\u9593\u53ea\u80fd\u6709\u4e00\u500b\u53ef\u8b8a\u53c3\u8003\uff0c\u6216\u662f\u4efb\u610f\u500b\u4e0d\u53ef\u8b8a\u53c3\u8003  "))),(0,a.kt)("h2",{id:"\u51fd\u6578\u501f\u7528\u8b8a\u6578\u53c3\u8003"},"\u51fd\u6578\u501f\u7528\u8b8a\u6578\u53c3\u8003"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"count_length_borrow \u53ea\u501f\u7528\u3002"),(0,a.kt)("li",{parentName:"ul"},"count_length \u6703\u6436\u8d70\u6240\u6709\u6b0a\uff0c\u6240\u4ee5 borrow_example_clone \u6703\u62cb\u51fa\u932f\u8aa4\u3002 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'pub fn borrow_example_clone(){\n\n    let hello = String::from("Hello Totem");\n\n    let length = count_length(hello);\n    // \u5efa\u8b70\u4fee\u6b63: \u5c07\u539f\u59cb\u8cc7\u6599 clone \n    // let length = count_length(hello.clone());\n\n    println!("lenght : {}", length.to_string());\n    println!("{}", hello); //error: could not compile\n\n}\n\npub fn borrow_example(){\n\n    let hello = String::from("Hello Totem");\n\n    let length = count_length_borrow(&hello); //argument \u524d\u52a0\u4e0a & \u9032\u884c\u4fee\u98fe\n    let length2 = count_length(hello.clone());\n\n    println!("lenght : {}", length.to_string());\n    println!("lenght2 : {}", length2.to_string());\n    println!("{}", hello);\n\n}\n\nfn count_length(input: String)->usize{\n    return input.len();\n}\n\nfn count_length_borrow(input: &String)->usize{\n    return input.len();\n}\n')),(0,a.kt)("h2",{id:"\u51fd\u6578\u501f\u7528\u53ef\u8b8a\u8b8a\u6578\u53c3\u8003"},"\u51fd\u6578\u501f\u7528\u53ef\u8b8a\u8b8a\u6578\u53c3\u8003"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8207\u8b8a\u6578\u5ba3\u544a\u904e\u7a0b\u76f8\u4f3c\uff0c\u8b8a\u6578\u5206\u70ba\u53ef\u8b8a\u8b8a\u6578\u8207\u4e0d\u53ef\u8b8a\u8b8a\u6578\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u53ef\u8b8a\u8b8a\u6578\u7684\u8b8a\u6578\u540d\u524d\u9808\u52a0\u4e0a mut \u9032\u884c\u4fee\u98fe\uff0c\u7528\u4f86\u8aaa\u660e\u8b8a\u6578\u6240\u6307\u5411\u7684\u8a18\u61b6\u9ad4\u662f\u53ef\u4ee5\u88ab\u7570\u52d5\u7684\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u53cd\u4e4b\uff0c\u672a\u52a0\u4fee\u98fe\u7684\u8a71\u5247\u4e0d\u80fd\u7570\u52d5\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u5728 ",(0,a.kt)("strong",{parentName:"p"},"\u7269\u4ef6\u985e\u7684\u53c3\u8003\u8b8a\u6578")," \u4e0a\u4e5f\u662f\u985e\u4f3c\u7684\uff0c",(0,a.kt)("br",{parentName:"p"}),"\n","\u9996\u5148\u6211\u5011\u9700\u8981\u5148\u5c07\u8b8a\u6578\u5ba3\u544a\u70ba ",(0,a.kt)("strong",{parentName:"p"},"\u53ef\u8b8a")," \u4e5f\u5c31\u662f\u52a0\u4e0a ",(0,a.kt)("strong",{parentName:"p"},"mut")," \u4fee\u98fe\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u7136\u5f8c\uff0c\u8981\u50b3\u905e\u53c3\u8003\u6642\u6548\u52a0\u4e0a ",(0,a.kt)("strong",{parentName:"p"},"&")," \u4fee\u98fe\u5b57\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u6b64\u6642\u53c3\u8003\u6240\u5e36\u7684\u8a18\u61b6\u9ad4\u9810\u8a2d\u662f\u4e0d\u53ef\u8b8a\u7684\uff0c\u82e5\u6539\u6210\u53ef\u8b8a\u5247\u9700\u8981\u5728 & \u4e4b\u5f8c\u52a0\u4e0a mut\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u518d\u52a0\u4e0a Rust \u8d85\u5f37\u578b\u5225\u9650\u5236\uff0c\u5225\u5fd8\u4e86 signature \u90e8\u5206\u4e5f\u8981\u52a0\u4e0a mut \u4fee\u98fe\u3002   "),(0,a.kt)("p",{parentName:"blockquote"},"\u518d\u56de\u5230\u6240\u6709\u6b0a\u7684\u6982\u5ff5(\u8cc7\u6599\u7af6\u722d): "),(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"\u8a18\u61b6\u9ad4\u53ea\u80fd\u4e00\u500b\u53c3\u8003\u64c1\u6709\u3002\u5982\u6b64\u53ef\u907f\u514d\u8aa4\u6539\u6216\u92b7\u6bc0\u8cc7\u6599\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u540c\u6a23\u6982\u5ff5\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u501f\u7528\u7684\u53ef\u8b8a")," \u53c3\u8003\u540c\u6642\u9593\u53ea\u80fd\u5b58\u5728\u4e00\u500b\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u907f\u514d\u591a\u65b9\u540c\u6642\u4fee\u6539\u8a18\u61b6\u9ad4\u8cc7\u6599\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u540c\u6a23\u540c\u4e00\u8cc7\u6599\u7684\u53ef\u8b8a\u8207\u4e0d\u53ef\u8b8a\u53c3\u8003\uff0c\u7121\u6cd5\u540c\u6642\u5b58\u5728\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u4f60\u4e0d\u6703\u5e0c\u671b\u62ff\u5230\u624b\u7684\u4e0d\u53ef\u8b8a\u53c3\u8003\u7684\u5167\u5bb9\u6703\u6539\u8b8a\u5427\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u6574\u500b\u7684\u6982\u5ff5\u8207\u60f3\u6cd5\u53ef\u4ee5\u85c9\u7531",(0,a.kt)("strong",{parentName:"p"},"\u8cc7\u6599\u5eab\u8cc7\u6599\u9694\u96e2 isolation")," \u7684\u6982\u5ff5\u4f86\u601d\u8003\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u4e0d\u904e\u5728 VS Code \u4e0a\u7df4\u7fd2\u6642\uff0c\u57fa\u672c\u4e0a IDE \u90fd\u80fd\u63d0\u793a\uff0c\u6240\u4ee5\u7121\u9808\u64d4\u5fc3\u3002  "))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Mutable Reference Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'pub fn mut_reference(){\n    let mut hello = String::from("Hello");\n    //mutable String\n\n    let totem = String::from("Totem");\n    //immutable String\n\n    let x = appendToWhom(&mut hello, &totem);\n    //\u50b3\u905e\u53c3\u8003\u6642\u8981\u52a0\u4e0a &\n    //\u82e5\u662f\u53ef\u8b8a\u53c3\u8003\u8981\u518d\u52a0\u4e0a mut\n\n    println!("{}", x);\n}\n\n\n//signature: greet \u4e5f\u9700\u8981\u5ba3\u544a\n// 1. & : reference\n// 2. mut : mutable \nfn appendToWhom(greet: &mut String, target: &String ) -> String{\n    greet.push_str(", "); //\u56e0\u70ba\u6709\u5ba3\u544a mut \u6240\u4ee5\u4e0d\u6703 compile error\n    greet.push_str(target);\n    return greet.clone();\n} // greet \u662f\u53c3\u8003\u6240\u4ee5\u8a18\u61b6\u9ad4\u4e0d\u6703\u6b78\u9084\n')),(0,a.kt)("h2",{id:"\u8ff7\u9014\u53c3\u8003-dangling-pointer"},"\u8ff7\u9014\u53c3\u8003 Dangling Pointer"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6307\u7684\u662f\u8cc7\u6e90\u5df2\u88ab\u91cb\u653e\uff0c\u4f46\u6307\u6a19\u537b\u9084\u7559\u8457\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u57fa\u672c\u4e0a Rust Compile \u7ba1\u90a3\u9ebc\u591a\uff0c\u6240\u4e0d\u5fc5\u64d4\u5fc3\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u4e5f\u5225\u60f3\u5617\u8a66\u662f\u5beb\u4e00\u500b\uff0c\u56e0\u70ba Rust Compiler \u6703\u4fdd\u8b77\u4f60\u3002  ")),(0,a.kt)("h2",{id:"slice-type"},"Slice Type",(0,a.kt)("span",{id:"Rust_Slice"},"\xa0")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"'Slice \u8b93\u6211\u5011\u53ef\u4f9d\u53c3\u8003\u4e00\u4e32\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5e8f\u5217\uff0c\u800c\u4e26\u975e\u53c3\u8003\u6574\u500b\u96c6\u5408'\u3002  ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Slice Syntax")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"zero-based index  "),(0,a.kt)("li",{parentName:"ul"},"from index \u70ba 0 \u6642\uff0c\u53ef\u4ee5\u7701\u7565  "),(0,a.kt)("li",{parentName:"ul"},"to_index \u70ba\u9577\u5ea6\u6642\uff0c\u53ef\u4ee5\u7701\u7565  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"    let var_name = &var_reference[from_index..to_index];\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Slice Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'\npub fn slice_example(){\n    let msg = String::from("Insect Totem : Rust");\n    let a = &msg[0..12]; //\n    let b = &msg[15..msg.len()];\n\n    println!("{}", a);\n    println!("{}", b);\n}\n\n')))}s.isMDXComponent=!0}}]);