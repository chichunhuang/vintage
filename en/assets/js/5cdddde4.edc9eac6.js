"use strict";(self.webpackChunktotem=self.webpackChunktotem||[]).push([[843],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(n),f=a,v=s["".concat(c,".").concat(f)]||s[f]||m[f]||o;return n?r.createElement(v,l(l({ref:t},u),{},{components:n})):r.createElement(v,l({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},l=void 0,i={unversionedId:"Rust\u8d77\u6b65\u8d70/Rust_Data_Type_Vctor",id:"Rust\u8d77\u6b65\u8d70/Rust_Data_Type_Vctor",title:"Rust_Data_Type_Vctor",description:"Vector",source:"@site/docs/003_Rust\u8d77\u6b65\u8d70/0032_Rust_Data_Type_Vctor.md",sourceDirName:"003_Rust\u8d77\u6b65\u8d70",slug:"/Rust\u8d77\u6b65\u8d70/Rust_Data_Type_Vctor",permalink:"/en/docs/Rust\u8d77\u6b65\u8d70/Rust_Data_Type_Vctor",draft:!1,tags:[],version:"current",sidebarPosition:32,frontMatter:{},sidebar:"totem_sidebar",previous:{title:"Rust_Data_Type_String",permalink:"/en/docs/Rust\u8d77\u6b65\u8d70/Rust_Data_Type_String"}},c={},p=[{value:"Vector",id:"vector",level:2}],u={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"vector"},"Vector"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"loop Vector")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"vec.iter()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let mut v = vec![1, 2, 3]; \nfor i in v.iter() { \n    println!("{}", i); \n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let some_vec = vec![1, 2, 3];\nfor i in &some_vec {\n    println!("{}", i);\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"in-place modification")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6ce8\u610f ","*","i  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let mut some_vec = vec![1, 2, 3];\nfor i in &mut some_vec {\n    *i *= 2;\n}\nprintln!("{:?}", some_vec); // [2, 4, 6]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"loop Vector : with index")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let vec = vec![1, 2, 3]; \nfor (index, element) in vec.enumerate() { \n    println!("Element {} is {}", index, element); \n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"DSL")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"some_vec.iter().map(|x| /",(0,a.kt)("em",{parentName:"p"}," do something here "),"/)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"vec.into_iter()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"it is lazy"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'//looping\nlet vec = vec![1, 2, 3]; \nlet doubled: Vec<i32> = vec.into_iter().map(|x| x * 2).collect(); \nprintln!("{:?}", doubled); // [2, 4, 6]\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"*","i  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'//looping + in-place modification\nlet mut some_vec = vec![1, 2, 3];\nsome_vec.iter_mut().for_each(|i| *i *= 2);\nprintln!("{:?}", some_vec); // [2, 4, 6]\n')))}m.isMDXComponent=!0}}]);