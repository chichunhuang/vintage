"use strict";(self.webpackChunktotem=self.webpackChunktotem||[]).push([[9854],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(n),k=l,d=m["".concat(p,".").concat(k)]||m[k]||c[k]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:l,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},546:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),l=(n(7294),n(3905));const o={title:"Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236",description:"Rust Loops and Flow Controlling",keywords:["Rust","describing","the main topics"]},a="Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236",i={unversionedId:"Rust\u8d77\u6b65\u8d70/Rust_Loop_Condition",id:"Rust\u8d77\u6b65\u8d70/Rust_Loop_Condition",title:"Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236",description:"Rust Loops and Flow Controlling",source:"@site/docs/003_Rust\u8d77\u6b65\u8d70/006_Rust_Loop_Condition.md",sourceDirName:"003_Rust\u8d77\u6b65\u8d70",slug:"/Rust\u8d77\u6b65\u8d70/Rust_Loop_Condition",permalink:"/docs/Rust\u8d77\u6b65\u8d70/Rust_Loop_Condition",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236",description:"Rust Loops and Flow Controlling",keywords:["Rust","describing","the main topics"]},sidebar:"totem_sidebar",previous:{title:"Rust \u51fd\u5f0f",permalink:"/docs/Rust\u8d77\u6b65\u8d70/Rust_Function"},next:{title:"Rust \u6240\u6709\u6b0a",permalink:"/docs/Rust\u8d77\u6b65\u8d70/Rust_Ownership"}},p={},u=[{value:"if else",id:"if-else",level:2},{value:"\u4e09\u5143\u904b\u7b97\u5b50 ( Ternary Operator )",id:"\u4e09\u5143\u904b\u7b97\u5b50--ternary-operator-",level:2},{value:"break \u4e2d\u65b7\u8ff4\u5708",id:"break-\u4e2d\u65b7\u8ff4\u5708",level:2},{value:"for Loop",id:"for-loop",level:2},{value:"loop Loop",id:"loop-loop",level:2},{value:"while Loop",id:"while-loop",level:2}],s={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"rust-\u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236"},"Rust \u8ff4\u5708\u8207\u6d41\u7a0b\u63a7\u5236"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u91cd\u9ede\u6458\u8981",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"if ... else if ... else"),(0,l.kt)("li",{parentName:"ul"},"\u4e09\u5143\u904b\u7b97 ( Ternary Operator)"),(0,l.kt)("li",{parentName:"ul"},"\u8ff4\u5708",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"loop Loop: \u7121\u9650\u8ff4\u5708\uff0c\u9664\u975e\u9047\u5230 break  "),(0,l.kt)("li",{parentName:"ul"},"for Loop"),(0,l.kt)("li",{parentName:"ul"},"while Loop")))))),(0,l.kt)("h2",{id:"if-else"},"if else"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"condition \u7684\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u62ec\u865f\uff0c\u52a0\u4e0a\u5c0f\u62ec\u865f\u7684\u8a71 IDE \u6703\u51fa\u73fe\u79fb\u9664\u7684\u5efa\u8b70\u3002  "),(0,l.kt)("li",{parentName:"ul"},"\u8207 Python \u4e0d\u540c\u7684\u662f\uff0cRust condition \u5fc5\u9808\u662f boolean\u3002(Python \u975e\u7a7a\u5b57\u4e32\u96c6\u5408\u7b49\u8996\u70ba True)  ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Rust if else example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'    let x = 5;\n    let y = 6;\n\n    if x %2 ==0 && y %2 ==0 {\n        println!("both even");\n    }else if x %2 !=0 && y %2 !=0 {\n        println!("both odd");\n    }else{\n        println!("different");\n    }\n')),(0,l.kt)("h2",{id:"\u4e09\u5143\u904b\u7b97\u5b50--ternary-operator-"},"\u4e09\u5143\u904b\u7b97\u5b50 ( Ternary Operator )"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e5f\u53ef\u7b97\u662f\u4e00\u7a2e if else \u8b8a\u5f62\u3002 ",(0,l.kt)("span",{style:{color:"#0044FF"}}," ",(0,l.kt)("strong",{parentName:"li"},"Rust \u652f\u63f4 let statement \u4e2d\u4f7f\u7528 if")," "),"  "),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u540c\u5206\u652f\u7684\u56de\u50b3\u7d50\u679c\u5fc5\u9808\u76f8\u540c\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Rust Ternary Operator")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'//Syntax\nlet variable = if condition { expression_A } else { expression_B }; //\u6ce8\u610f\u6700\u672b\u7aef\u6709\u4e00\u500b\u5206\u865f\n\nlet num = 10;\nlet result = if num%2==0 {"even"} else {"odd"};\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Rust \u4e09\u5143\u904b\u7b97\u5176\u5be6\u53ef\u4ee5\u64f4\u5927\u6210 block \u7684\u5beb\u6cd5\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'//Syntax\nlet num = 15;\nlet result = \n    if num%2==0 {\n        if num > 10 {\n            "Even and > 10"\n        }else{\n            "Even and < 10"\n        }\n    } else {\n        if num > 10 {\n            "Odd and > 10"\n        }else{\n            "Odd and < 10"\n        }\n    };\nprintln!("num is {}", result );\n')),(0,l.kt)("h1",{id:"\u8ff4\u5708--loops-"},"\u8ff4\u5708 ( Loops )"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8ff4\u5708",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"for Loop"),(0,l.kt)("li",{parentName:"ul"},"while Loop"),(0,l.kt)("li",{parentName:"ul"},"loop Loop: \u7121\u9650\u8ff4\u5708\uff0c\u9664\u975e\u9047\u5230 break  "))),(0,l.kt)("li",{parentName:"ul"},"break and continue",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"break: Rust \u7684 ",(0,l.kt)("strong",{parentName:"li"},"break \u5f8c\u65b9\u53ef\u4ee5\u642d\u914d expression\uff0c\u7528\u4f86\u62cb\u51fa\u56de\u50b3\u503c")," \u3002  ")))),(0,l.kt)("h2",{id:"break-\u4e2d\u65b7\u8ff4\u5708"},"break \u4e2d\u65b7\u8ff4\u5708"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Rust \u4ee5 break \u95dc\u9375\u5b57\u4e2d\u65b7\u8ff4\u5708\u7684\u8a9e\u6cd5\u6709\u4e09\u7a2e",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u55ae\u7d14\u5730\u4e2d\u65b7\u8ff4\u5708"),(0,l.kt)("li",{parentName:"ul"},"\u4e2d\u65b7\u4e26\u62cb\u51fa\u56de\u50b3\u503c"),(0,l.kt)("li",{parentName:"ul"},"\u591a\u91cd\u8ff4\u5708\u4e0b\u4e2d\u65b7\u5167\u5c64\u8ff4\u5708\u4e26\u7e7c\u7e8c\u6307\u5b9a\u5916\u5c64\u8ff4\u5708( \u642d\u914d loop label \u4f7f\u7528 ) ")))),(0,l.kt)("h2",{id:"for-loop"},"for Loop"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7576\u689d\u4ef6\u767c\u751f\u6642\u4e2d\u65b7\u8ff4\u5708")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"for loop syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"//for each\nfor element in list {\n    statements...\n} \n\n//for in range\nfor element in (from..to) {\n    statements...\n} \n\nfor element in (from..to).rev() {\n    statements...\n} \n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n\n}\n")),(0,l.kt)("h2",{id:"loop-loop"},"loop Loop"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7121\u9650\u8ff4\u5708\uff0c\u76f4\u5230\u9047\u5230 break"),(0,l.kt)("li",{parentName:"ul"},"loop label")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"loop loop syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"'loop_label: loop{\n    statements...\n    //break;\n    //break expression;\n    //break 'loop_label;\n}\n")),(0,l.kt)("h2",{id:"while-loop"},"while Loop"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7576\u689d\u4ef6\u767c\u751f\u6642\u4e2d\u65b7\u8ff4\u5708")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"while loop syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"    while condition {\n        statements...\n    }\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut count_down = 10;\n    \n    while count_down != 0 {\n        println!("{count_down}!");\n        count_down -= 1;\n    }\n    \n    println!("Fire\uff01");\n}\n')))}c.isMDXComponent=!0}}]);